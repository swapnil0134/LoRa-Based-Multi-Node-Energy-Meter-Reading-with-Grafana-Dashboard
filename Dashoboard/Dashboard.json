{
  "__inputs": [
    {
      "name": "DS_ENERGY_METER_DEVICE_1",
      "label": "Energy_Meter_Device_1",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "barchart",
      "name": "Bar chart",
      "version": ""
    },
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.2.2"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "state-timeline",
      "name": "State timeline",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 16,
      "panels": [],
      "title": "Live Readings",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_ENERGY_METER_DEVICE_1}"
      },
      "description": "Phase line to neutral voltage",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": false,
            "axisLabel": "Voltage",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "volt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 0,
        "y": 1
      },
      "id": 12,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "range",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_ENERGY_METER_DEVICE_1}"
          },
          "query": "from(bucket: \"Energy_Meter_Device_3\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_field\"] == \" Phase 1 line to neutral voltage\" or r[\"_field\"] == \" Phase 2 line to neutral voltage\" or r[\"_field\"] == \" Phase 3 line to neutral voltage\")\n  |> drop(columns: [\"device\"])  // Exclude the ID column\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _field: if r._field == \" Phase 1 line to neutral voltage\" then \"Phase 1 Voltage\" else if r._field == \" Phase 2 line to neutral voltage\" then \"Phase 2 Voltage\" else \"Phase 3 Voltage\",\n      _value: r._value\n    }))\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Phase Voltages",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_ENERGY_METER_DEVICE_1}"
      },
      "description": "Phase currents",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": false,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "amp"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 13,
        "x": 11,
        "y": 1
      },
      "id": 9,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "range",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_ENERGY_METER_DEVICE_1}"
          },
          "query": "from(bucket: \"Energy_Meter_Device_3\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_field\"] == \" Phase 1 current\" or r[\"_field\"] == \" Phase 2 current\" or r[\"_field\"] == \" Phase 3 current\")\n  |> drop(columns: [\"device\"])\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _field: if r._field == \" Phase 1 current\" then \"Phase 1 Current\" else if r._field == \" Phase 2 current\" then \"Phase 2 Current\" else \"Phase 3 Current\",\n      _value: r._value\n    }))\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Phase Currents",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_ENERGY_METER_DEVICE_1}"
      },
      "fieldConfig": {
        "defaults": {
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 4,
        "x": 0,
        "y": 9
      },
      "id": 10,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_ENERGY_METER_DEVICE_1}"
          },
          "hide": false,
          "query": "from(bucket: \"Energy_Meter_Device_3\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_field\"] == \" Phase 1 power factor\" or r[\"_field\"] == \" Phase 2 power factor\" or r[\"_field\"] == \" Phase 3 power factor\")\n  |> drop(columns: [\"device\"])\n  |> last()\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _field: if r._field == \" Phase 1 power factor\" then \"Phase 1 Power Factor\" else if r._field == \" Phase 2 power factor\" then \"Phase 2 Power Factor\" else \"Phase 3 Power Factor\",\n      _value: r._value\n    }))\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "B"
        }
      ],
      "title": "Power Factor",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_ENERGY_METER_DEVICE_1}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": true,
            "axisCenteredZero": false,
            "axisColorMode": "series",
            "axisGridShow": false,
            "axisLabel": "Voltage",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-purple",
                "value": null
              }
            ]
          },
          "unit": "volt"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Line 1 to Line 2 Voltage"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Line 2 to Line 3 Voltage"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Line 3 to Line 1 Voltage"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 100
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 14,
        "x": 4,
        "y": 9
      },
      "id": 11,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "range",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.1.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_ENERGY_METER_DEVICE_1}"
          },
          "hide": false,
          "query": "from(bucket: \"Energy_Meter_Device_3\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_field\"] == \" Line 1 to Line 2 voltage\" or r[\"_field\"] == \" Line 2 to Line 3 voltage\" or r[\"_field\"] == \" Line 3 to Line 1 voltage\")\n  |> drop(columns: [\"device\"])\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _field: if r._field == \" Line 1 to Line 2 voltage\" then \"Line 1 to Line 2 Voltage\" else if r._field == \" Line 2 to Line 3 voltage\" then \"Line 2 to Line 3 Voltage\" else \"Line 3 to Line 1 Voltage\",\n      _value: r._value\n    }))\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "B"
        }
      ],
      "title": "Line to Line Votlages",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_ENERGY_METER_DEVICE_1}"
      },
      "fieldConfig": {
        "defaults": {
          "displayName": "Neutral Current",
          "fieldMinMax": true,
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "orange",
                "value": 70
              },
              {
                "color": "red",
                "value": 85
              }
            ]
          },
          "unit": "amp"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 18,
        "y": 9
      },
      "id": 7,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "11.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_ENERGY_METER_DEVICE_1}"
          },
          "hide": false,
          "query": "from(bucket: \"Energy_Meter_Device_3\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_field\"] == \" Neutral current\")\n  |> drop(columns: [\"device\"])\n  |> last()\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "B"
        }
      ],
      "title": "Natural Currant",
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_ENERGY_METER_DEVICE_1}"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "rothz"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 21,
        "y": 9
      },
      "id": 8,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_ENERGY_METER_DEVICE_1}"
          },
          "hide": false,
          "query": "from(bucket: \"Energy_Meter_Device_3\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_field\"] == \" Frequency\")\n  |> drop(columns: [\"device\"])\n  |> last()\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "B"
        }
      ],
      "title": "Frequency",
      "transparent": true,
      "type": "stat"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 18
      },
      "id": 15,
      "panels": [],
      "title": "Power Consumption",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_ENERGY_METER_DEVICE_1}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 19
      },
      "id": 4,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_ENERGY_METER_DEVICE_1}"
          },
          "hide": false,
          "query": "from(bucket: \"Energy_Meter_Device_3\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_field\"] == \" Phase 1 active power\" or r[\"_field\"] == \" Phase 2 active power\" or r[\"_field\"] == \" Phase 3 active power\")\n  |> drop(columns: [\"device\"])\n \n  |> map(fn: (r) => ({\n      _time: r._time,\n      _field: if r._field == \" Phase 1 active power\" then \"Phase 1 Power\" else if r._field == \" Phase 2 active power\" then \"Phase 2 Power\" else \"Phase 3 Power\",\n      _value: r._value\n    }))\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "B"
        }
      ],
      "title": "Active Powers-Live",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_ENERGY_METER_DEVICE_1}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-reds"
          },
          "custom": {
            "fillOpacity": 70,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineWidth": 0,
            "spanNulls": false
          },
          "fieldMinMax": true,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 16,
        "x": 8,
        "y": 19
      },
      "hideTimeOverride": true,
      "id": 13,
      "options": {
        "alignValue": "center",
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "showLegend": false
        },
        "mergeValues": true,
        "rowHeight": 0.9,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_ENERGY_METER_DEVICE_1}"
          },
          "hide": false,
          "query": "from(bucket: \"Energy_Meter_Device_3\")\n  |> range(start: -24h)\n  |> filter(fn: (r) => r[\"_field\"] == \" Phase 1 active power\" or r[\"_field\"] == \" Phase 2 active power\" or r[\"_field\"] == \" Phase 3 active power\")\n  |> drop(columns: [\"device\"])\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _field: if r._field == \" Phase 1 active power\" then \"Phase 1 Energy Consumption\" else if r._field == \" Phase 2 active power\" then \"Phase 2 Energy Consumption\" else \"Phase 3 Energy Consumption\",\n      _value: r._value\n    }))\n  |> aggregateWindow(every: 1h, fn: mean, createEmpty: false)  // Aggregating by hour and summing the power over each hour\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _field: r._field,\n      _value: r._value / 1000.0  // Converting from watts to kilowatt-hours (kWh)\n    }))\n  |> yield(name: \"energy\")\n",
          "refId": "B"
        }
      ],
      "timeFrom": "12h",
      "timeShift": "1h",
      "title": "Hourly Energy Usage (Wh)",
      "transparent": true,
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_ENERGY_METER_DEVICE_1}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": false,
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "hue",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "fieldMinMax": true,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "watth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 27
      },
      "hideTimeOverride": true,
      "id": 14,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "none",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "11.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_ENERGY_METER_DEVICE_1}"
          },
          "hide": false,
          "query": "from(bucket: \"Energy_Meter_Device_3\")\n  |> range(start: -8d)\n  |> filter(fn: (r) => r[\"_field\"] == \" Phase 1 active power\" or r[\"_field\"] == \" Phase 2 active power\" or r[\"_field\"] == \" Phase 3 active power\")\n  |> drop(columns: [\"device\"])\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _field: if r._field == \" Phase 1 active power\" then \"Phase 1 Energy Consumption\" \n              else if r._field == \" Phase 2 active power\" then \"Phase 2 Energy Consumption\" \n              else \"Phase 3 Energy Consumption\",\n      _value: float(v: r._value)  // Ensure _value is treated as a float\n    }))\n  |> aggregateWindow(every: 24h, fn: mean, createEmpty: false)  // Aggregating by day and calculating the mean power\n  |> map(fn: (r) => ({\n      _time: r._time,\n      _field: r._field,  // Retain the new field name from the previous map\n      _value: r._value * 24.0 // Multiply by 24.0 to ensure its treated as a float\n    }))\n  |> yield(name: \"energy\")\n",
          "refId": "B"
        }
      ],
      "timeFrom": "7d",
      "timeShift": "24h",
      "title": "Daily Energy Usage (kWh)",
      "transparent": true,
      "type": "barchart"
    }
  ],
  "refresh": "1m",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Eergy_Meter_3",
  "uid": "fdzu7yiidotfkf",
  "version": 32,
  "weekStart": ""
}
